function [ s_0, badj ] = NF_spatialgrowth(nNodes,beta,alpha)
% This function returns a binary network with node order generated by the
% spatial growth model from Kaiser, and Hilgetag 2004.
%
%
% Inputs:
%       nNodes - number of nodes in final network
%       beta - density term in [0,1]
%       alpha - non-negative spatial range term
%
%
% Outputs:
%       s_0 - ordering of nodes added to the network
%       badj - binary adjacency matrix with nodes in s_0 order
%
%
% Reference: Kaiser, Marcus, and Claus C. Hilgetag. "Spatial growth of 
% real-world networks." Physical Review E 69.3 (2004): 036103.
% Original code found at https://www.dynamic-connectome.org/?page_id=25
%
%
%% Main function:



badj = zeros(nNodes,nNodes);
nodeLocations = zeros(nNodes,2);


% First node placed at (0.5,0.5)
nodeLocations(1,:) = [0.5 0.5];

% Add remaining nodes
u = 2;

while u <= nNodes
    
    
    % Step 1 - choose new node (u) location
    u_coords = rand(1,2);
    
    
    % Step 2a - compute distance and probility of edge attachment
    D = squareform(pdist([nodeLocations(1:(u-1),:); u_coords]));
    D_u = D(u,:);       % Distance from every node to u
    
    t1 = -alpha*D_u;
    t1b = exp(t1);
    p_vec = beta*t1b;
    %p_vec = beta*(exp(-alpha*D_u));   % Probability vector
    
    
    % Step 3 - determine new edge formations and remove node if none form
    r = rand(1,u-1);
    new_neighbors = find(p_vec(1:(u-1))>r);
  
    
    if ~isempty(new_neighbors)
        badj(new_neighbors,u) = 1;
        nodeLocations(u,:) = u_coords;
        u = u+1;
    end
    
end

    
s_0 = 1:nNodes;
badj = badj+badj';    
   
end

